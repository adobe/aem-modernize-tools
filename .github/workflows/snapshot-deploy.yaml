name: Snapshot Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy-snapshot:
    runs-on: ubuntu-latest
    if: github.repository == 'adobe/aem-modernize-tools' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up environment with Java and Maven
      # See https://github.com/actions/setup-java#publishing-using-apache-maven
      - name: Setup JDK
        uses: actions/setup-java@v2.3.0
        with:
          distribution: 'zulu'
          java-version: 11
          cache: maven
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Import GPG key
        env:
          GPG_SECRET_KEYS: ${{ secrets.GPG_SECRET_KEYS }}
          GPG_OWNERTRUST: ${{ secrets.GPG_OWNERTRUST }}
        run: |
          echo $GPG_SECRET_KEYS | base64 --decode | gpg --import --no-tty --batch --yes
          echo $GPG_OWNERTRUST | base64 --decode | gpg --import-ownertrust --no-tty --batch --yes

#      - name: Publish Java8 to Apache Maven Central
#        run: mvn clean deploy -P release,java8
#        env:
#          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
#          MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
#          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Publish to Apache Maven Central
        run: mvn clean deploy -P release,attach-javadoc,attach-source
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Upload CodeCov
        uses: codecov/codecov-action@v2.1.0
        with:
          file: core/target/site/jacoco/jacoco.xml
          flags: unittests
